{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prese\\\\projects\\\\restaurant\\\\src\\\\frontend\\\\src\\\\pages\\\\Posts.js\",\n    _s = $RefreshSig$();\n\nimport { Row, Col, Form, Input, Select, Button, Space, List, Card } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { useDataContext } from '../hooks/useDataContext';\nimport Post from '../components/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nfunction Posts() {\n  _s();\n\n  const [form] = Form.useForm();\n  const {\n    posts,\n    fetchPosts,\n    addPost,\n    fetchMenus,\n    menus\n  } = useDataContext();\n  const [changeFlag, setChangeFlag] = useState(true);\n\n  const handlePublish = async () => {\n    await form.validateFields();\n    const {\n      description,\n      title,\n      menuId\n    } = await form.getFieldsValue();\n    const menu = menus.find(men => men.id == menuId);\n    await addPost({\n      title,\n      description,\n      menu\n    });\n    form.submit();\n    form.resetFields();\n    setChangeFlag(!changeFlag);\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const loadPosts = async () => await fetchPosts();\n\n    const loadMenus = async () => await fetchMenus();\n\n    loadPosts();\n    loadMenus();\n    return () => {\n      abortController.abort();\n    };\n  }, [changeFlag]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gutter: 16,\n      style: {\n        marginTop: '2em'\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        span: 6,\n        offset: 9,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          form: form,\n          name: \"normal_login\",\n          initialValues: {\n            remember: true\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"title\",\n            label: \"Post title\",\n            rules: [{\n              required: true,\n              message: 'Please enter post title'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Enter post title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"description\",\n            label: \"Post description\",\n            rules: [{\n              required: true,\n              message: 'Please enter post description'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n              type: \"textArea\",\n              placeholder: \"Enter post description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"menuId\",\n            label: \"Post menu\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Select menu\",\n              allowClear: true,\n              children: menus && menus.map(menu => /*#__PURE__*/_jsxDEV(Option, {\n                value: menu.id,\n                children: menu.title\n              }, menu.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              offset: 5,\n              children: /*#__PURE__*/_jsxDEV(Space, {\n                size: \"large\",\n                split: true,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"primary\",\n                  htmlType: \"submit\",\n                  onClick: handlePublish,\n                  children: \"Publish post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"primary\",\n                  onClick: () => form.resetFields(),\n                  children: \"Clear form\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        offset: 4,\n        span: 16,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          bordered: true,\n          header: \"Restaurant post\",\n          dataSource: posts,\n          itemLayout: \"vertical\",\n          renderItem: post => /*#__PURE__*/_jsxDEV(List.Item, {\n            style: {\n              cursor: 'pointer'\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              hoverable: true,\n              onClick: () => navigate(`/public/posts/${post.id}`),\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: post.menu.title ? post.menu.title : 'No menu'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this),\n          pagination: {\n            position: 'bottom',\n            pageSize: '3'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Posts, \"vXI7hjmp+oH5cwCLzVuLZX0R7w8=\", false, function () {\n  return [Form.useForm, useDataContext];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Users/prese/projects/restaurant/src/frontend/src/pages/Posts.js"],"names":["Row","Col","Form","Input","Select","Button","Space","List","Card","useEffect","useState","useDataContext","Post","Option","Posts","form","useForm","posts","fetchPosts","addPost","fetchMenus","menus","changeFlag","setChangeFlag","handlePublish","validateFields","description","title","menuId","getFieldsValue","menu","find","men","id","submit","resetFields","abortController","AbortController","loadPosts","loadMenus","abort","marginTop","remember","required","message","map","post","cursor","navigate","position","pageSize"],"mappings":"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","sourcesContent":["import { Row, Col, Form, Input, Select, Button, Space, List, Card } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDataContext } from '../hooks/useDataContext';\r\n\r\nimport Post from '../components/Post';\r\nconst { Option } = Select;\r\n\r\nfunction Posts() {\r\n  const [form] = Form.useForm();\r\n  const { posts, fetchPosts, addPost, fetchMenus, menus } = useDataContext();\r\n  const [changeFlag, setChangeFlag] = useState(true);\r\n  const handlePublish = async () => {\r\n    await form.validateFields();\r\n    const { description, title, menuId } = await form.getFieldsValue();\r\n    const menu = menus.find((men) => men.id == menuId);\r\n    await addPost({ title, description, menu });\r\n    form.submit();\r\n    form.resetFields();\r\n    setChangeFlag(!changeFlag);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    const loadPosts = async () => await fetchPosts();\r\n    const loadMenus = async () => await fetchMenus();\r\n    loadPosts();\r\n    loadMenus();\r\n    return () => {\r\n      abortController.abort();\r\n    };\r\n  }, [changeFlag]);\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={16} style={{ marginTop: '2em' }}>\r\n        <Col span={6} offset={9}>\r\n          <Form\r\n            form={form}\r\n            name=\"normal_login\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n          >\r\n            <Form.Item\r\n              name=\"title\"\r\n              label=\"Post title\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter post title',\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Enter post title\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"description\"\r\n              label=\"Post description\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please enter post description',\r\n                },\r\n              ]}\r\n            >\r\n              <Input.TextArea\r\n                type=\"textArea\"\r\n                placeholder=\"Enter post description\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"menuId\" label=\"Post menu\">\r\n              <Select placeholder=\"Select menu\" allowClear>\r\n                {menus &&\r\n                  menus.map((menu) => (\r\n                    <Option key={menu.id} value={menu.id}>\r\n                      {menu.title}\r\n                    </Option>\r\n                  ))}\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Col offset={5}>\r\n                <Space size=\"large\" split={true}>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    onClick={handlePublish}\r\n                  >\r\n                    Publish post\r\n                  </Button>\r\n                  <Button type=\"primary\" onClick={() => form.resetFields()}>\r\n                    Clear form\r\n                  </Button>\r\n                </Space>\r\n              </Col>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col offset={4} span={16}>\r\n          <List\r\n            bordered\r\n            header=\"Restaurant post\"\r\n            dataSource={posts}\r\n            itemLayout=\"vertical\"\r\n            renderItem={(post) => (\r\n              <List.Item key={post.id} style={{ cursor: 'pointer' }}>\r\n                <Card\r\n                  hoverable={true}\r\n                  onClick={() => navigate(`/public/posts/${post.id}`)}\r\n                >\r\n                  <h3>{post.title}</h3>\r\n                  <h4>{post.menu.title ? post.menu.title : 'No menu'}</h4>\r\n                </Card>\r\n              </List.Item>\r\n            )}\r\n            pagination={{\r\n              position: 'bottom',\r\n              pageSize: '3',\r\n            }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}