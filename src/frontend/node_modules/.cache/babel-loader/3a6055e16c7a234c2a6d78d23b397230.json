{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prese\\\\projects\\\\restaurant\\\\src\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from 'react';\nimport setAuthToken from '../utils/setAuthToken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'SIGN_IN_SUCCESS':\n      const {\n        access_token,\n        refresh_token\n      } = action.payload;\n      localStorage.setItem('access_token', access_token);\n      localStorage.setItem('refresh_token', refresh_token);\n      return { ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        error: null\n      };\n\n    case 'LOGOUT':\n      localStorage.clear();\n      return { ...state,\n        refresh_token: null,\n        access_token: null,\n        isAuthenticated: false,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport function AuthProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(authReducer, {\n    access_token: localStorage.getItem('access_token'),\n    refresh_token: localStorage.getItem('refresh_token'),\n    isAuthenticated: false,\n    error: null\n  });\n\n  const register = async user => {\n    const req = await fetch('/api/v1/restaurant/user/save', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: new URLSearchParams({\n        firstName: user.firstName,\n        lastName: user.lastName,\n        email: user.email,\n        password: user.password\n      })\n    });\n\n    if (req.ok) {\n      const data = await req.json();\n      dispatch({\n        type: 'SIGN_IN_SUCCESS',\n        payload: data\n      });\n    }\n  };\n\n  const loadUser = async () => {\n    if (localStorage.getItem('token')) {\n      setAuthToken(localStorage.getItem('token'));\n    }\n  };\n\n  const signIn = async user => {\n    const req = await fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: new URLSearchParams({\n        email: user.email,\n        password: user.password\n      })\n    });\n\n    if (req.ok) {\n      const data = await req.json();\n      dispatch({\n        type: 'SIGN_IN_SUCCESS',\n        payload: data\n      });\n    }\n  };\n\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: { ...state,\n      register,\n      loadUser,\n      signIn,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProvider, \"rJSXNrrvyH/y6ALekBqVtK6ANSA=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/prese/projects/restaurant/src/frontend/src/context/AuthContext.js"],"names":["createContext","useReducer","setAuthToken","AuthContext","authReducer","state","action","type","access_token","refresh_token","payload","localStorage","setItem","isAuthenticated","error","clear","AuthProvider","children","dispatch","getItem","register","user","req","fetch","method","headers","body","URLSearchParams","firstName","lastName","email","password","ok","data","json","loadUser","signIn","logout"],"mappings":"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","sourcesContent":["import { createContext, useReducer } from 'react';\r\n\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\nexport const AuthContext = createContext();\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SIGN_IN_SUCCESS':\r\n      const { access_token, refresh_token } = action.payload;\r\n      localStorage.setItem('access_token', access_token);\r\n      localStorage.setItem('refresh_token', refresh_token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        error: null,\r\n      };\r\n    case 'LOGOUT':\r\n      localStorage.clear();\r\n      return {\r\n        ...state,\r\n        refresh_token: null,\r\n        access_token: null,\r\n        isAuthenticated: false,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [state, dispatch] = useReducer(authReducer, {\r\n    access_token: localStorage.getItem('access_token'),\r\n    refresh_token: localStorage.getItem('refresh_token'),\r\n    isAuthenticated: false,\r\n    error: null,\r\n  });\r\n\r\n  const register = async (user) => {\r\n    const req = await fetch('/api/v1/restaurant/user/save', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: new URLSearchParams({\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        email: user.email,\r\n        password: user.password,\r\n      }),\r\n    });\r\n\r\n    if (req.ok) {\r\n      const data = await req.json();\r\n      dispatch({\r\n        type: 'SIGN_IN_SUCCESS',\r\n        payload: data,\r\n      });\r\n    }\r\n  };\r\n\r\n  const loadUser = async () => {\r\n    if (localStorage.getItem('token')) {\r\n      setAuthToken(localStorage.getItem('token'));\r\n    }\r\n  };\r\n\r\n  const signIn = async (user) => {\r\n    const req = await fetch('/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: new URLSearchParams({\r\n        email: user.email,\r\n        password: user.password,\r\n      }),\r\n    });\r\n\r\n    if (req.ok) {\r\n      const data = await req.json();\r\n      dispatch({\r\n        type: 'SIGN_IN_SUCCESS',\r\n        payload: data,\r\n      });\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ ...state, register, loadUser, signIn, logout }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}